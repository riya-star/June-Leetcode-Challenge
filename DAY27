********************************************************************************************************
Perfect Squares

Given a positive integer n, find the least number of perfect square numbers (for example, 1, 4, 9, 16, ...) which sum to n.

Example 1:

Input: n = 12
Output: 3 
Explanation: 12 = 4 + 4 + 4.
Example 2:

Input: n = 13
Output: 2
Explanation: 13 = 4 + 9.
***********************************************************************************************************

class Solution {
public:
    int numSquares(int n) {
        int coin = 1;
        vector<int> coins;
        while(coin*coin <= n) {
            coins.push_back(coin*coin);
            coin++;
        }
        vector<int> dp(n+1,INT_MAX);
        dp[0] = 0;
        for(int i=1; i<=n; i++) {
            for(int j=0; j<coins.size(); j++) {
                if(i-coins[j]>=0) {
                    dp[i] = min(dp[i], 1 + dp[i-coins[j]]); 
                }
            }
        }
        return dp[n];
    }
};
